// Code generated by MockGen. DO NOT EDIT.
// Source: ../iam.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	iam "github.com/aws/aws-sdk-go/service/iam"
	gomock "github.com/golang/mock/gomock"
)

// MockIAMServiceInterface is a mock of IAMServiceInterface interface.
type MockIAMServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIAMServiceInterfaceMockRecorder
}

// MockIAMServiceInterfaceMockRecorder is the mock recorder for MockIAMServiceInterface.
type MockIAMServiceInterfaceMockRecorder struct {
	mock *MockIAMServiceInterface
}

// NewMockIAMServiceInterface creates a new mock instance.
func NewMockIAMServiceInterface(ctrl *gomock.Controller) *MockIAMServiceInterface {
	mock := &MockIAMServiceInterface{ctrl: ctrl}
	mock.recorder = &MockIAMServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAMServiceInterface) EXPECT() *MockIAMServiceInterfaceMockRecorder {
	return m.recorder
}

// GetRole mocks base method.
func (m *MockIAMServiceInterface) GetRole(input *iam.GetRoleInput) (*iam.GetRoleOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRole", input)
	ret0, _ := ret[0].(*iam.GetRoleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRole indicates an expected call of GetRole.
func (mr *MockIAMServiceInterfaceMockRecorder) GetRole(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRole", reflect.TypeOf((*MockIAMServiceInterface)(nil).GetRole), input)
}
